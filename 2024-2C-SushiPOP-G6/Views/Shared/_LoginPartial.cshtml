@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
     <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="PanelUsuario" asp-action="Index">
            <i class="bi bi-person-fill"></i>
        </a>
    </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Carritos" asp-action="Index">
                <i class="bi bi-cart"></i>
            </a>
        </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="Login" asp-action="IniciarSesion">
            <i class="bi bi-person-fill"></i>
        </a>
        
    </li>
   
}
</ul>
